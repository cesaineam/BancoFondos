// <auto-generated />
using System;
using BancoFondos.EntityFramework.Db;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BancoFondos.EntityFramework.Migrations
{
    [DbContext(typeof(BancoFondosDbContext))]
    [Migration("20240821053713_CrearTablasv5")]
    partial class CrearTablasv5
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.33")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("BancoFondos.Core.Entidades.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Saldo")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("BancoFondos.Core.Entidades.Fondo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Rendimiento")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Fondos");
                });

            modelBuilder.Entity("BancoFondos.Core.Entidades.FondosInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Categoria")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("MontoMinimo")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("FondosInfo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Categoria = "FPV",
                            MontoMinimo = 75000m,
                            Nombre = "FPV_BTG_PACTUAL_RECAUDADORA"
                        },
                        new
                        {
                            Id = 2,
                            Categoria = "FPV",
                            MontoMinimo = 125000m,
                            Nombre = "FPV_BTG_PACTUAL_ECOPETROL"
                        },
                        new
                        {
                            Id = 3,
                            Categoria = "FIC",
                            MontoMinimo = 50000m,
                            Nombre = "DEUDAPRIVADA"
                        },
                        new
                        {
                            Id = 4,
                            Categoria = "FIC",
                            MontoMinimo = 250000m,
                            Nombre = "FDO-ACCIONES"
                        },
                        new
                        {
                            Id = 5,
                            Categoria = "FPV",
                            MontoMinimo = 100000m,
                            Nombre = "FPV_BTG_PACTUAL_DINAMICA"
                        });
                });

            modelBuilder.Entity("BancoFondos.Core.Entidades.Transaccion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("FondoId")
                        .HasColumnType("int");

                    b.Property<decimal>("Monto")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("FondoId");

                    b.ToTable("Transacciones");
                });

            modelBuilder.Entity("BancoFondos.Core.Entidades.Transaccion", b =>
                {
                    b.HasOne("BancoFondos.Core.Entidades.Cliente", "Cliente")
                        .WithMany("Transacciones")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BancoFondos.Core.Entidades.Fondo", "Fondo")
                        .WithMany("Transacciones")
                        .HasForeignKey("FondoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Fondo");
                });

            modelBuilder.Entity("BancoFondos.Core.Entidades.Cliente", b =>
                {
                    b.Navigation("Transacciones");
                });

            modelBuilder.Entity("BancoFondos.Core.Entidades.Fondo", b =>
                {
                    b.Navigation("Transacciones");
                });
#pragma warning restore 612, 618
        }
    }
}
